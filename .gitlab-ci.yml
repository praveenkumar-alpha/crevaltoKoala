stages:
  - pre_build
  - build
  - deploy
  - production

##################################################
##               Pre-Build jobs                 ##
##################################################
docker-build:stable:
  stage: pre_build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest -f docker/Dockerfile .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
  only:
    refs:
      - web
      - triggers
      - schedules
    variables:
      - $CI_COMMIT_REF_NAME == "master"

##################################################
##                 Build jobs                   ##
##################################################
docker-build:devel:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:devel -f docker/devel/Dockerfile .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:devel
  environment:
    name: demo
    url: https://demo.koala-lms.org
  only:
    refs:
      - web
      - triggers
      - schedules
    variables:
      - $CI_COMMIT_REF_NAME == "develop"

##################################################
##               Production jobs                ##
##################################################
demo:
  stage: production
  image: alpine
  variables:
    GIT_STRATEGY: none
    HOSTNAME: "demo.koala-lms.org"
  before_script:
    - apk add --no-cache openssh-client
    - mkdir ~/.ssh
    - echo "${DEMO_SSH_KEY}" > ~/.ssh/"${HOSTNAME}"
    - chmod go-rwx -R ~/.ssh
  script:
    - ssh demo@"${HOSTNAME}" -p ${DEMO_SSH_PORT} -i ~/.ssh/"${HOSTNAME}" -o StrictHostKeyChecking=accept-new
      "rm -rf ~/$CI_PROJECT_NAME && git clone https://gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git ~/$CI_PROJECT_NAME && cd ~/$CI_PROJECT_NAME &&
      docker-compose -f docker/examples/"${HOSTNAME}"/docker-compose.yml pull &&
      docker-compose -f docker/examples/"${HOSTNAME}"/docker-compose.yml up -d --force-recreate &&
      docker image prune -fa"
  environment:
    name: demo
    url: https://demo.koala-lms.org
  only:
    refs:
      - web
      - triggers
      - schedules
    variables:
      - $CI_COMMIT_REF_NAME == "develop"
